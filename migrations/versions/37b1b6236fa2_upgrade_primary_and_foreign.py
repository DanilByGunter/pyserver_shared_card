"""upgrade primary and foreign

Revision ID: 37b1b6236fa2
Revises: 7d6b681f137f
Create Date: 2023-12-24 16:09:01.377117

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '37b1b6236fa2'
down_revision: Union[str, None] = '7d6b681f137f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('account')
    op.drop_index('index_check_id', table_name='check', postgresql_using='hash')
    op.create_unique_constraint(None, 'check', ['id'])
    op.drop_constraint('group_token_id_group_key', 'group_token', type_='unique')
    op.create_unique_constraint(None, 'group_token', ['id'])
    op.drop_constraint('group_token_id_group_fkey', 'group_token', type_='foreignkey')
    op.create_foreign_key(None, 'group_token', 'group', ['id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_column('group_token', 'id_group')
    op.drop_index('index_target_id', table_name='target', postgresql_using='hash')
    op.create_unique_constraint(None, 'target', ['id'])
    op.create_unique_constraint(None, 'user', ['id'])
    op.create_unique_constraint(None, 'user_account', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user_account', type_='unique')
    op.drop_constraint(None, 'user', type_='unique')
    op.drop_constraint(None, 'target', type_='unique')
    op.create_index('index_target_id', 'target', ['id_group'], unique=False, postgresql_using='hash')
    op.add_column('group_token', sa.Column('id_group', sa.UUID(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'group_token', type_='foreignkey')
    op.create_foreign_key('group_token_id_group_fkey', 'group_token', 'group', ['id_group'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint(None, 'group_token', type_='unique')
    op.create_unique_constraint('group_token_id_group_key', 'group_token', ['id_group'])
    op.drop_constraint(None, 'check', type_='unique')
    op.create_index('index_check_id', 'check', ['id_group'], unique=False, postgresql_using='hash')
    op.create_table('account',
    sa.Column('uid', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('login', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('role', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('pwhash', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('real_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('home_phone', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('uid', name='account_pkey')
    )
    # ### end Alembic commands ###
